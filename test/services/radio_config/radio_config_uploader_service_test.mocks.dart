// Mocks generated by Mockito 5.4.4 from annotations
// in meshx/test/services/radio_config/radio_config_uploader_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:typed_data' as _i6;

import 'package:meshx/protobufs/generated/meshtastic/portnums.pb.dart' as _i5;
import 'package:meshx/services/interfaces/radio_reader.dart' as _i4;
import 'package:meshx/services/interfaces/radio_writer.dart' as _i3;
import 'package:meshx/services/queued_radio_writer.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [QueuedRadioWriter].
///
/// See the documentation for Mockito's code generation for more information.
class MockQueuedRadioWriter extends _i1.Mock implements _i2.QueuedRadioWriter {
  MockQueuedRadioWriter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void setRadioWriter(_i3.RadioWriter? radioWriter) => super.noSuchMethod(
        Invocation.method(
          #setRadioWriter,
          [radioWriter],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setRadioReader(_i4.RadioReader? radioReader) => super.noSuchMethod(
        Invocation.method(
          #setRadioReader,
          [radioReader],
        ),
        returnValueForMissingStub: null,
      );

  @override
  int sendMeshPacket({
    required int? to,
    int? channel = 0,
    bool? wantAck = false,
    required _i5.PortNum? portNum,
    required _i6.Uint8List? payload,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMeshPacket,
          [],
          {
            #to: to,
            #channel: channel,
            #wantAck: wantAck,
            #portNum: portNum,
            #payload: payload,
          },
        ),
        returnValue: 0,
      ) as int);

  @override
  _i7.Future<void> sendWantConfig({required int? wantConfigId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendWantConfig,
          [],
          {#wantConfigId: wantConfigId},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
